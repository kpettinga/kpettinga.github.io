/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

@font-face {
  font-family: 'kp-ui';
  src: url("../fonts/kp-ui/fonts/kp-ui.ttf?wt41oh") format("truetype"), url("../fonts/kp-ui/fonts/kp-ui.woff?wt41oh") format("woff"), url("../fonts/kp-ui/fonts/kp-ui.svg?wt41oh#kp-ui") format("svg");
  font-weight: normal;
  font-style: normal;
}
.icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'kp-ui' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-send:before {
  content: "\e904";
}

.icon-github:before {
  content: "\e900";
}

.icon-chat:before {
  content: "\e901";
}

.icon-x:before {
  content: "\e902";
}

.icon-link:before {
  content: "\e903";
}

.icon-twitter:before {
  content: "\ea96";
}

.icon-linkedin:before {
  content: "\eaca";
}

@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1.2);
    transform: scale(1.2);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
@-webkit-keyframes bounce {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  50% {
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0);
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}
@keyframes bounce {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  50% {
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0);
  }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}
* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

::-moz-selection {
  background: white;
}

::selection {
  background: white;
}

#page {
  position: relative;
  overflow: hidden;
}

html {
  font-size: 100%;
}

body {
  font-family: "freight-text-pro", "Georgia", serif;
  color: #222;
  -webkit-transition: background 300ms ease-out;
  transition: background 300ms ease-out;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
body.initialized {
  background: #f3f5f7;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  margin: 1.5rem 0 0;
  line-height: 1;
  font-family: "sofia-pro", "Helvetica Neue", arial, sans-serif;
  font-weight: 600;
  font-size: 1rem;
}

h1, .h1 {
  font-size: 3rem;
}
@media only screen and (min-width: 1000px) {
  h1, .h1 {
    font-size: 4rem;
  }
}

h2, .h2 {
  font-size: 2.75rem;
}

h4, .h4 {
  font-size: 1.5rem;
}

p, .p {
  margin: 1.5rem 0 0;
  line-height: 1.333;
  font-size: 18/16px;
}

a {
  color: inherit;
  text-decoration: none;
  pointer-events: all;
}

.sans-serif {
  font-family: "sofia-pro", "Helvetica Neue", arial, sans-serif;
}

img, video, iframe {
  max-width: 100%;
  height: auto;
}

.media-16x9 {
  position: relative;
  padding-top: 56.25%;
  height: 0;
}
.media-16x9 video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

canvas {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: 100%;
  z-index: 0;
  -webkit-transition: background 0.3s ease-out;
  transition: background 0.3s ease-out;
  background: #e2e5e8;
}
@media only screen and (min-width: 1000px) {
  canvas {
    left: 24vw;
  }
}

button, .button {
  -webkit-appearance: none;
  border: 0;
  background: none;
  font-family: "sofia-pro", "Helvetica Neue", arial, sans-serif;
  font-weight: 600;
  font-size: 1.5rem;
  outline: 0;
  cursor: pointer;
  -webkit-transition: all 250ms ease-out;
  transition: all 250ms ease-out;
}
button:hover .icon, button:focus .icon, .button:hover .icon, .button:focus .icon {
  -webkit-box-shadow: 0 0 0 3px inherit;
  box-shadow: 0 0 0 3px inherit;
  -webkit-animation-duration: 0.5s;
  animation-duration: 0.5s;
  -webkit-animation-name: pulse;
  animation-name: pulse;
}
button:hover .text, button:focus .text, .button:hover .text, .button:focus .text {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0) !important;
  transform: translate3d(0, 0, 0) !important;
}
button.success, .button.success {
  color: #00b172;
}
button.success .icon, .button.success .icon {
  -webkit-box-shadow: 0 0 0 3px #00b172;
  box-shadow: 0 0 0 3px #00b172;
}
button .text, .button .text {
  display: inline-block;
  -webkit-transition: all 250ms ease-out;
  transition: all 250ms ease-out;
  opacity: 0;
  -webkit-transform: translate3d(-20px, 0, 0);
  transform: translate3d(-20px, 0, 0);
}
button.icon-right .text, .button.icon-right .text {
  -webkit-transform: translate3d(20px, 0, 0);
  transform: translate3d(20px, 0, 0);
}
button .icon, .button .icon {
  border-radius: 50%;
  border: 0;
  -webkit-box-shadow: 0 0 0 3px;
  box-shadow: 0 0 0 3px;
  display: inline-block;
  width: 2em;
  height: 2em;
  text-align: center;
  line-height: 1;
  padding: 0.5em;
  margin-right: 0.5em;
  -webkit-transition: all 250ms cubic-bezier(0.15, 0.67, 0.36, 1.17);
  transition: all 250ms cubic-bezier(0.15, 0.67, 0.36, 1.17);
}
button.icon-right .icon, .button.icon-right .icon {
  margin-left: 0.5em;
}

form {
  width: 100%;
  max-width: 705px;
  margin: 0 auto;
}
@media only screen and (min-width: 1000px) {
  form {
    width: calc(90% - 4vw);
  }
}

input[type="text"], input[type="email"], textarea {
  -webkit-appearance: none;
  border: 0;
  background: rgba(255, 255, 255, 0.5);
  border-radius: 0.5rem;
  padding: 0.7rem 1rem;
  display: block;
  width: 100%;
  font-size: 1rem;
  font-family: "sofia-pro", "Helvetica Neue", arial, sans-serif;
  font-weight: 600;
  line-height: 1;
  color: #222;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}
input[type="text"]:focus, input[type="email"]:focus, textarea:focus {
  outline: 0;
}
input[type="text"]::-webkit-input-placeholder, input[type="email"]::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  color: #bbb;
}
input[type="text"]:-ms-input-placeholder, input[type="email"]:-ms-input-placeholder, textarea:-ms-input-placeholder {
  color: #bbb;
}
input[type="text"]::-ms-input-placeholder, input[type="email"]::-ms-input-placeholder, textarea::-ms-input-placeholder {
  color: #bbb;
}
input[type="text"]::placeholder, input[type="email"]::placeholder, textarea::placeholder {
  color: #bbb;
}
@media only screen and (min-width: 1000px) {
  input[type="text"], input[type="email"], textarea {
    font-size: 1.5rem;
  }
}

textarea {
  padding: 1rem;
  line-height: 1.5;
}

.field {
  position: relative;
  overflow: hidden;
  margin-bottom: 1.5rem;
}
.field label {
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 0.5rem;
  background: white;
  -webkit-transition: -webkit-transform 300ms ease-out;
  transition: -webkit-transform 300ms ease-out;
  transition: transform 300ms ease-out;
  transition: transform 300ms ease-out, -webkit-transform 300ms ease-out;
}
.field input + label {
  -webkit-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0);
}
.field textarea + label {
  -webkit-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0);
}
.field textarea:focus + label,
.field input:focus + label {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.frame {
  margin: 0;
  min-height: 100vh;
  overflow: hidden;
}
@media only screen and (min-width: 1000px) {
  .frame {
    margin: 0 0 0 24vw;
  }
}
.frame.intro img {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
  -webkit-filter: grayscale(1);
  filter: grayscale(1);
}
.frame.intro img:hover {
  -webkit-filter: grayscale(0);
  filter: grayscale(0);
}

.frame-media {
  position: relative;
  z-index: 3;
  min-height: inherit;
  padding: 0 4vw;
}
@media only screen and (min-width: 1000px) {
  .frame-media {
    padding: 0 10%;
  }
}
.frame-media video {
  -webkit-box-shadow: 0 2px 1.2vw rgba(0, 0, 0, 0.3);
  box-shadow: 0 2px 1.2vw rgba(0, 0, 0, 0.3);
  border-top: 1.2vw solid #b5b6b7;
  border-bottom: 0.7vw solid #b5b6b7;
  border-radius: 0.55vw;
}

.frame-video {
  margin: 0 0 1.5rem;
}
@media only screen and (min-width: 1000px) {
  .frame-video {
    margin-top: 10vh;
    min-height: 80vh;
  }
}

.frame-text {
  font-size: 1.25rem;
  max-width: 52.125rem;
  margin: 0 auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  color: white;
}
@media only screen and (min-width: 1600px) {
  .frame-text {
    font-size: 1.25vw;
  }
}
@media only screen and (min-width: 834px) {
  .frame-text {
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
  .frame-text .left {
    -webkit-box-flex: calc(66.666% - 1.5rem);
    -ms-flex: calc(66.666% - 1.5rem) 0 0px;
    flex: calc(66.666% - 1.5rem) 0 0;
    margin-right: 1.5rem;
  }
  .frame-text .right {
    -webkit-box-flex: calc(33.333% - 1.5rem);
    -ms-flex: calc(33.333% - 1.5rem) 0 0px;
    flex: calc(33.333% - 1.5rem) 0 0;
    margin-left: 1.5rem;
    justify-self: flex-end;
  }
}

.mask {
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 8vh 4vw;
  pointer-events: none;
}
@media only screen and (min-width: 1000px) {
  .mask {
    position: fixed;
  }
}

.top {
  -ms-flex-item-align: start;
  align-self: flex-start;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.center {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 0.5rem 4vw;
  background: white;
}
@media only screen and (min-width: 1000px) {
  .center {
    bottom: auto;
    left: auto;
    right: auto;
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    position: absolute;
    padding: 0;
    background: none;
  }
}

.bottom {
  -ms-flex-item-align: end;
  align-self: flex-end;
  width: 100%;
  display: none;
}
@media only screen and (min-width: 1000px) {
  .bottom {
    display: block;
  }
}

.avatar {
  position: relative;
  height: 66px;
  border-radius: 50%;
  width: 66px;
  margin-right: 20px;
}

.cta-chat {
  margin-left: auto;
  -webkit-transition: opacity 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17), -webkit-transform 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17);
  transition: opacity 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17), -webkit-transform 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17);
  transition: transform 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17), opacity 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17);
  transition: transform 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17), opacity 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17), -webkit-transform 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17);
  pointer-events: all;
}
.last-frame .cta-chat {
  opacity: 0;
}

.cta-work {
  -webkit-transform: translate3d(0, calc( 100% + 8vh ), 0);
  transform: translate3d(0, calc( 100% + 8vh ), 0);
  opacity: 0;
  pointer-events: all;
}
.initialized[data-project="0"] .cta-work {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  opacity: 1;
}

.headline {
  height: 10vw;
  text-align: center;
}
@media only screen and (min-width: 1000px) {
  .headline {
    max-width: 20vw;
    text-align: left;
  }
}
.headline > a {
  display: none;
  position: absolute;
  left: 0;
  font-size: 1.5rem;
  opacity: 0;
  padding: 0.5em 1em;
  margin-left: -1em;
  -webkit-transition: padding 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17), opacity 0.3s ease-out;
  transition: padding 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17), opacity 0.3s ease-out;
}
@media only screen and (min-width: 1000px) {
  .headline > a {
    display: inline;
  }
}
.headline > a.active {
  opacity: 0.3;
}
.headline > a.active:hover {
  opacity: 1;
}
.headline > a.active:first-child {
  bottom: 100%;
}
.headline > a.active:first-child:hover {
  padding-bottom: 0.75em;
}
.headline > a.active:first-child:active {
  padding-bottom: 1.25em;
}
.headline > a.active:last-child {
  top: 100%;
}
.headline > a.active:last-child:hover {
  padding-top: 0.75em;
}
.headline > a.active:last-child:active {
  padding-top: 1.25em;
}

.headline-item {
  height: 10vw;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 0;
}
.headline-item.active {
  opacity: 1;
}

.headline-text {
  font-size: 1.25rem;
  font-family: "sofia-pro", "Helvetica Neue", arial, sans-serif;
  font-weight: 600;
  text-transform: none;
  line-height: 1;
  width: 100%;
}
@media only screen and (min-width: 1000px) {
  .headline-text {
    font-size: 2.5vw;
  }
}

.flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.center-x {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.center-y {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-left: -0.75rem;
  margin-right: -0.75rem;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.quarter, .third, .half, .half-lg, .two-thirds, .three-quarters {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}

.w-20 {
  -webkit-box-flex: 20%;
  -ms-flex: 20% 0 1;
  flex: 20% 0 1;
}

.quarter {
  -webkit-box-flex: 25%;
  -ms-flex: 25% 0 1;
  flex: 25% 0 1;
}

.third {
  -webkit-box-flex: 33.333%;
  -ms-flex: 33.333% 0 1;
  flex: 33.333% 0 1;
}

.half {
  -webkit-box-flex: 50%;
  -ms-flex: 50% 0 1;
  flex: 50% 0 1;
}

.half-lg {
  -webkit-box-flex: calc(100% - 1.5rem);
  -ms-flex: calc(100% - 1.5rem) 0 0px;
  flex: calc(100% - 1.5rem) 0 0;
}
@media only screen and (min-width: 1000px) {
  .half-lg {
    -webkit-box-flex: calc(50% - 1.5rem);
    -ms-flex: calc(50% - 1.5rem) 0 0px;
    flex: calc(50% - 1.5rem) 0 0;
  }
}

.two-thirds {
  -webkit-box-flex: 66.666%;
  -ms-flex: 66.666% 0 1;
  flex: 66.666% 0 1;
}

.three-quarters {
  -webkit-box-flex: 75%;
  -ms-flex: 75% 0 1;
  flex: 75% 0 1;
}

.w-100 {
  -webkit-box-flex: 100%;
  -ms-flex: 100% 0 1;
  flex: 100% 0 1;
}

.push-25 {
  margin-left: 25%;
}

.faded {
  opacity: 0.5;
}

.text-center {
  text-align: center;
}

.pa-gutter {
  padding: 1.5rem;
}

.mt-0 {
  margin-top: 0;
}

.pb-6 {
  padding-bottom: 6rem;
}

.my-1 {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.animate {
  -webkit-transition: all 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17);
  transition: all 0.3s cubic-bezier(0.15, 0.67, 0.36, 1.17);
}

.delay-100 {
  -webkit-transition-delay: 100ms;
  transition-delay: 100ms;
}

.delay-200 {
  -webkit-transition-delay: 200ms;
  transition-delay: 200ms;
}

.delay-300 {
  -webkit-transition-delay: 300ms;
  transition-delay: 300ms;
}

.delay-400 {
  -webkit-transition-delay: 400ms;
  transition-delay: 400ms;
}

.delay-500 {
  -webkit-transition-delay: 500ms;
  transition-delay: 500ms;
}

.delay-600 {
  -webkit-transition-delay: 600ms;
  transition-delay: 600ms;
}

.fade-in {
  opacity: 0;
}
.initialized .fade-in.on-init {
  opacity: 1;
}
.active .fade-in.on-active {
  opacity: 1;
}

.from-top {
  -webkit-transform: translate3d(0, -100px, 0);
  transform: translate3d(0, -100px, 0);
}

.from-bottom {
  -webkit-transform: translate3d(0, 100px, 0);
  transform: translate3d(0, 100px, 0);
}

.from-left {
  -webkit-transform: translate3d(-100px, 0, 0);
  transform: translate3d(-100px, 0, 0);
}

.from-right {
  -webkit-transform: translate3d(100px, 0, 0);
  transform: translate3d(100px, 0, 0);
}

.initialized .from-top.on-init, .initialized .from-bottom.on-init, .initialized .from-left.on-init, .initialized .from-right.on-init {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}
.active .from-top.on-active, .active .from-bottom.on-active, .active .from-left.on-active, .active .from-right.on-active {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
